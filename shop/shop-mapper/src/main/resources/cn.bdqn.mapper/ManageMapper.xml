<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--管理员-->
<mapper namespace="cn.bdqn.mapper.ManageMapper">
    <!--实体类与数据库映射字段-->
    <resultMap id="resultManage" type="cn.bdqn.domain.Manage">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userName" column="userName" jdbcType="VARCHAR"/>
        <result property="passWord" column="passWord" jdbcType="VARCHAR"/>
        <result property="realName" column="realName" jdbcType="VARCHAR"/>
    </resultMap>
    <!--数据库字段-->
    <sql id="Manage_field">
        id,userName,passWord,realName
    </sql>
    <!--实体属性-->
    <sql id="Manage_insert">
        #{id},#{userName},#{passWord},#{realName}
    </sql>
    <!--查询时的条件-->
    <sql id="Manage_where">
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userName != null">
                and userName = #{userName}
            </if>
            <if test="passWord != null">
                and passWord = #{passWord}
            </if>
            <if test="realName != null">
                and realName = #{realName}
            </if>
        </where>
    </sql>
    <!--查询时的条件-->
    <sql id="Manage_update">
        <if test="userName != null">
            userName = #{userName},
        </if>
        <if test="passWord != null">
            passWord = #{passWord},
        </if>
        <if test="realName != null">
            realName = #{realName},
        </if>
    </sql>

    <!--
        新增
        参数实体类型
        返回主键
    -->
    <insert id="insert" parameterType="cn.bdqn.domain.Manage" useGeneratedKeys="true" keyProperty="id">
        insert into manage(
            <include refid="Manage_field"></include>
        )values(
            <include refid="Manage_insert"></include>
        )
    </insert>

    <!--根据实体主键删除一个实体-->
    <delete id="deleteById" parameterType="cn.bdqn.domain.Manage">
        delete from mange where id=#{id}
    </delete>

    <!--通过实体删除-->
    <delete id="deleteByEntity" parameterType="cn.bdqn.domain.Manage">
        delete from manage
        <include refid="Manage_where"></include>
    </delete>

    <!--通过map删除-->
    <delete id="deleteByMap" parameterType="java.util.HashMap">
        delete from manage
        <include refid="Manage_where"></include>
    </delete>

    <!--更新一个实体-->
    <update id="update" parameterType="cn.bdqn.domain.Manage">
        update manage
        <set>
            <include refid="Manage_update"></include>
        </set>
        <include refid="Manage_where"></include>
    </update>

    <!--通过id进行修改-->
    <update id="updateById" parameterType="cn.bdqn.domain.Manage">
        update manage
        <set>
            <include refid="Manage_update"></include>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <!--根据参数查询-->
    <select id="listByMap" resultMap="resultManage">
        select <include refid="Manage_field"></include>
        from manage
        <include refid="Manage_where"></include>
    </select>

    <!--查询所有实体-->
    <select id="listAll">
        select <include refid="Manage_field"></include>
        from manage
    </select>

    <!--查询所有实体,根据实体属性值为判断条件查询所有实体，-->
    <select id="listAllByEntity" resultMap="resultManage">
        select <include refid="Manage_field"></include>
        from manage
        <include refid="Manage_where"></include>
    </select>

    <!--根据主键获取一个实体-->
    <select id="getById" resultMap="resultManage" parameterType="java.lang.Integer">
        select <include refid="Manage_field"></include>
        from  manage
        where id = #{id}
    </select>

    <!--通过map查询-->
    <select id="getByMap" resultMap="resultManage" parameterType="map">
        select <include refid="Manage_field"></include>
        from manage
        <where>
            <include refid="Manage_where"></include>
        </where>
    </select>

    <!--通过map查询-->
    <select id="getByEntity" resultMap="resultManage" parameterType="cn.bdqn.domain.Manage">
        select <include refid="Manage_field"/>
        from manage
        <include refid="Manage_where"/>
    </select>

    <!--批量新增-->
    <insert id="insertBatch" parameterType="java.util.List">
        insert into manage(
            <include refid="Manage_field"></include>
        )values
        <foreach collection="list" item="item" index="index" separator=",">
        (
            #{item.userName},#{item.passWord},#{item.realName}
        )
        </foreach>
    </insert>

    <!--批量修改-->
    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=";">
             update manage 
             <set>
                 <if test="item.userName != null">
                     and userName = #{item.userName}
                 </if>
                 <if test="item.passWord != null">
                     and passWord = #{item.passWord}
                 </if>
                 <if test="item.realName != null">
                     and realName = #{item.realName}
                 </if>
             </set>
             <where>
                 <if test="item.id != null">
                     id = #{item.id}
                 </if>
             </where>
        </foreach>
    </update>

    <!--查询一个对象返回map-->
    <select id="getBySqlReturnMap" resultType="map">
        ${sql}
    </select>

    <!--查询一个对象返回实体类-->
    <select id="getBySqlReturnEntity" resultMap="resultManage">
        ${sql}
    </select>

    <!--查询列表返回map-->
    <select id="listBySqlReturnMap" resultType="map">
        ${sql}
    </select>

    <!--查询列表返回实体-->
    <select id="listBySqlReturnEntity" resultMap="resultManage">
        ${sql}
    </select>


</mapper>